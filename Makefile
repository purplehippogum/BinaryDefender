#############################################################################
# Makefile for building: game_vegaperk
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sat Apr 27 15:29:45 2013
# Project:  game_vegaperk.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile game_vegaperk.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = abstract_object.cpp \
		arrow_bullet.cpp \
		basic_bullet.cpp \
		beginwindow.cpp \
		bomb.cpp \
		enemy.cpp \
		game.cpp \
		game_object.cpp \
		gameplay.cpp \
		health_bar.cpp \
		mainwindow.cpp \
		play_area.cpp \
		player.cpp \
		score.cpp moc_mainwindow.cpp
OBJECTS       = abstract_object.o \
		arrow_bullet.o \
		basic_bullet.o \
		beginwindow.o \
		bomb.o \
		enemy.o \
		game.o \
		game_object.o \
		gameplay.o \
		health_bar.o \
		mainwindow.o \
		play_area.o \
		player.o \
		score.o \
		moc_mainwindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game_vegaperk.pro
QMAKE_TARGET  = game_vegaperk
DESTDIR       = 
TARGET        = game_vegaperk

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game_vegaperk.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile game_vegaperk.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile game_vegaperk.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game_vegaperk1.0.0 || $(MKDIR) .tmp/game_vegaperk1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game_vegaperk1.0.0/ && $(COPY_FILE) --parents abstract_object.h arrow_bullet.h basic_bullet.h beginwindow.h bomb.h enemy.h game_object.h gameplay.h health_bar.h mainwindow.h play_area.h player.h score.h .tmp/game_vegaperk1.0.0/ && $(COPY_FILE) --parents abstract_object.cpp arrow_bullet.cpp basic_bullet.cpp beginwindow.cpp bomb.cpp enemy.cpp game.cpp game_object.cpp gameplay.cpp health_bar.cpp mainwindow.cpp play_area.cpp player.cpp score.cpp .tmp/game_vegaperk1.0.0/ && (cd `dirname .tmp/game_vegaperk1.0.0` && $(TAR) game_vegaperk1.0.0.tar game_vegaperk1.0.0 && $(COMPRESS) game_vegaperk1.0.0.tar) && $(MOVE) `dirname .tmp/game_vegaperk1.0.0`/game_vegaperk1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game_vegaperk1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp
moc_mainwindow.cpp: beginwindow.h \
		player.h \
		abstract_object.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		play_area.h \
		mainwindow.h \
		score.h \
		gameplay.h \
		game_object.h \
		health_bar.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

abstract_object.o: abstract_object.cpp abstract_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o abstract_object.o abstract_object.cpp

arrow_bullet.o: arrow_bullet.cpp arrow_bullet.h \
		basic_bullet.h \
		abstract_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o arrow_bullet.o arrow_bullet.cpp

basic_bullet.o: basic_bullet.cpp basic_bullet.h \
		abstract_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o basic_bullet.o basic_bullet.cpp

beginwindow.o: beginwindow.cpp beginwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o beginwindow.o beginwindow.cpp

bomb.o: bomb.cpp bomb.h \
		basic_bullet.h \
		abstract_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bomb.o bomb.cpp

enemy.o: enemy.cpp enemy.h \
		abstract_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enemy.o enemy.cpp

game.o: game.cpp mainwindow.h \
		beginwindow.h \
		player.h \
		abstract_object.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		play_area.h \
		score.h \
		gameplay.h \
		game_object.h \
		health_bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

game_object.o: game_object.cpp game_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game_object.o game_object.cpp

gameplay.o: gameplay.cpp gameplay.h \
		mainwindow.h \
		beginwindow.h \
		player.h \
		abstract_object.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		play_area.h \
		score.h \
		game_object.h \
		health_bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameplay.o gameplay.cpp

health_bar.o: health_bar.cpp health_bar.h \
		game_object.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o health_bar.o health_bar.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		beginwindow.h \
		player.h \
		abstract_object.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		play_area.h \
		score.h \
		gameplay.h \
		game_object.h \
		health_bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

play_area.o: play_area.cpp play_area.h \
		mainwindow.h \
		beginwindow.h \
		player.h \
		abstract_object.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		score.h \
		gameplay.h \
		game_object.h \
		health_bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o play_area.o play_area.cpp

player.o: player.cpp play_area.h \
		mainwindow.h \
		beginwindow.h \
		player.h \
		abstract_object.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		score.h \
		gameplay.h \
		game_object.h \
		health_bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

score.o: score.cpp score.h \
		abstract_object.h \
		mainwindow.h \
		beginwindow.h \
		player.h \
		basic_bullet.h \
		arrow_bullet.h \
		enemy.h \
		play_area.h \
		gameplay.h \
		game_object.h \
		health_bar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o score.o score.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

